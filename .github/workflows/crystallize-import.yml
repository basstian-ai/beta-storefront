name: Crystallize Import
on:
  workflow_dispatch:
  push:
    paths:
      - 'scripts/**'
      - 'crystallize-import/**'
      - '.github/workflows/crystallize-import.yml'
      - 'package.json'

jobs:
  import:
    runs-on: ubuntu-latest
    env:
      CRYSTALLIZE_TENANT_IDENTIFIER:   ${{ secrets.CRYSTALLIZE_TENANT_IDENTIFIER }}
      CRYSTALLIZE_ACCESS_TOKEN_ID:     ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_ID }}
      CRYSTALLIZE_ACCESS_TOKEN_SECRET: ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with: { version: 10 }

      - run: pnpm install --frozen-lockfile

      - run: |
          TENANT=${CRYSTALLIZE_TENANT_IDENTIFIER:-$CRYSTALLIZE_TENANT_ID}
          echo "Using tenant: $TENANT"
          pnpm exec ts-node-esm --loader ts-node/esm scripts/dummy-to-crystallize.ts
          npx crystallize import \
            --access-token-id      "$CRYSTALLIZE_ACCESS_TOKEN_ID" \
            --access-token-secret  "$CRYSTALLIZE_ACCESS_TOKEN_SECRET" \
            --tenant               "$TENANT" \
            --batch-size 50 --max-tries 5 --update \
            --path crystallize-import
        env:
          CRYSTALLIZE_TENANT_IDENTIFIER:   ${{ secrets.CRYSTALLIZE_TENANT_IDENTIFIER }}
          CRYSTALLIZE_TENANT_ID:           ${{ secrets.CRYSTALLIZE_TENANT_ID }}
          CRYSTALLIZE_ACCESS_TOKEN_ID:     ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_ID }}
          CRYSTALLIZE_ACCESS_TOKEN_SECRET: ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_SECRET }}
