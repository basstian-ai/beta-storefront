name: Crystallize Import

on:
  workflow_dispatch:
  push:
    paths:
      - 'scripts/**'
      - 'crystallize-import/**'
      - '.github/workflows/crystallize-import.yml'
      - 'package.json'

jobs:
  import:
    runs-on: ubuntu-latest

    env:
      CRYSTALLIZE_TENANT_IDENTIFIER: ${{ secrets.CRYSTALLIZE_TENANT_IDENTIFIER }}
      CRYSTALLIZE_ACCESS_TOKEN_ID:   ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_ID }}
      CRYSTALLIZE_ACCESS_TOKEN_SECRET: ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_SECRET }}
      CI: true
      FORCE_COLOR: 0
      TERM: dumb

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: node-cache-v2-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: node-cache-v2-${{ runner.os }}-

      - run: pnpm install --frozen-lockfile

      - run: pnpm approve-builds

      - name: Check import files

        run: |
          test -f crystallize-import/shapes/product.json
          test -f crystallize-import/priceVariants.json

      - name: Import to Crystallize
        env:
          CRYSTALLIZE_TENANT_IDENTIFIER: ${{ secrets.CRYSTALLIZE_TENANT_IDENTIFIER }}
          CRYSTALLIZE_TENANT_ID:         ${{ secrets.CRYSTALLIZE_TENANT_ID }}
          CRYSTALLIZE_ACCESS_TOKEN_ID:   ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_ID }}
          CRYSTALLIZE_ACCESS_TOKEN_SECRET: ${{ secrets.CRYSTALLIZE_ACCESS_TOKEN_SECRET }}
          CI: true
          FORCE_COLOR: 0
          TERM: dumb
        run: |
          set -euo pipefail
          TENANT=${CRYSTALLIZE_TENANT_IDENTIFIER:-$CRYSTALLIZE_TENANT_ID}
          echo "ðŸš€  Importing into tenant: $TENANT"

          npx tsx scripts/dummy-to-crystallize.ts

          IMPORT_OUT="$(npx crystallize import \
            --json --no-ui \
            --access-token-id      "$CRYSTALLIZE_ACCESS_TOKEN_ID" \
            --access-token-secret  "$CRYSTALLIZE_ACCESS_TOKEN_SECRET" \
            --tenant               "$TENANT" \
            --batch-size 50 --max-tries 5 --update \
            --path crystallize-import \
            | tail -n 1)"

          echo "$IMPORT_OUT" | tee import.json

      - name: Debug import.json
        run: cat import.json


      - name: Fail when nothing was created
        run: |
          ITEMS=$(jq '.itemsCreated // 0' import.json 2>/dev/null || echo 0)
          if [ "$ITEMS" -eq 0 ]; then
            echo "::error::Import created 0 items" && exit 1
          fi
          echo "ðŸŽ‰  $ITEMS items created/updated"
          echo "JSON summary:"
          cat import.json
